<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:jee="http://www.springframework.org/schema/jee" xmlns:jaxrs="http://cxf.apache.org/jaxrs"
	xsi:schemaLocation="
	http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd    
	http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd
	http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.2.xsd    
	http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd  
	http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-3.2.xsd
	http://cxf.apache.org/jaxrs http://cxf.apache.org/schemas/jaxrs.xsd ">

	<import resource="classpath:META-INF/cxf/cxf.xml" />
	<import resource="classpath:META-INF/cxf/cxf-servlet.xml" />

	<jaxrs:server  address="/api">
		<jaxrs:serviceBeans>
			<ref bean="appService" />
		</jaxrs:serviceBeans>
		 <jaxrs:providers>
	       <bean class="org.codehaus.jackson.jaxrs.JacksonJaxbJsonProvider"/>    
	    </jaxrs:providers>
	</jaxrs:server>

	<context:property-placeholder location="classpath:jdbc.properties" />
	<bean id="dataSource" name="datasource"
		class="com.atomikos.jdbc.nonxa.AtomikosNonXADataSourceBean" init-method="init"
		destroy-method="close">
		 <property name="uniqueResourceName" value="mysqlDataSource" />
		<!--<property name="uniqueResourceName" value="oralceDataSource" />-->
		<!-- <property name="xaDataSourceClassName">
			<value>com.mysql.jdbc.jdbc2.optional.MysqlXADataSource</value>
			 <value>oracle.jdbc.xa.client.OracleXADataSource</value>
		</property> -->
		<property name="driverClassName" value="${jdbc.driverClassName}" />
		<property name="url" value="${jdbc.url}" />
		<property name="user" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />

		<!-- <property name="xaProperties">
			<props>
				<prop key="URL">${jdbc.url}</prop>
				<prop key="user">${jdbc.username}</prop>
				<prop key="password">${jdbc.password}</prop>
				<prop key="pinGlobalTxToPhysicalConnection">true</prop>
			</props>
		</property> -->
		<property name="reapTimeout" value="6000" />
		<property name="poolSize" value="10" />
		<property name="maxPoolSize" value="100" />
		<property name="minPoolSize" value="1" />
		<property name="testQuery" value="SELECT 1 FROM DUAL" />
		<!-- <property name="testQuery" value="select 1" /> -->
	</bean>

	<bean id="userTransactionService" class="com.atomikos.icatch.config.UserTransactionServiceImp"
		init-method="init" destroy-method="shutdownForce">
		<constructor-arg>
			<props>
				<prop key="com.atomikos.icatch.service">com.atomikos.icatch.standalone.UserTransactionServiceFactory
				</prop>
			</props>
		</constructor-arg>
	</bean>

	<bean id="atomikosTransactionManager" class="com.atomikos.icatch.jta.UserTransactionManager"
		init-method="init" destroy-method="close" depends-on="userTransactionService">
		<property name="forceShutdown" value="false" />
		<property name="startupTransactionService" value="false" />
	</bean>

	<bean id="atomikosUserTransaction" class="com.atomikos.icatch.jta.UserTransactionImp"
		depends-on="userTransactionService">
		<property name="transactionTimeout" value="300000" />
	</bean>

	<bean id="transactionManager"
		class="org.springframework.transaction.jta.JtaTransactionManager"
		depends-on="userTransactionService">
		<property name="transactionManager" ref="atomikosTransactionManager" />
		<property name="userTransaction" ref="atomikosUserTransaction" />
		<property name="allowCustomIsolationLevels" value="true" />
	</bean>

	<bean id="entityManagerFactory"
		class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
		<property name="persistenceUnitName" value="MYSQLPU" />
		<property name="packagesToScan" value="com.questionnaire.entity" />
		<property name="persistenceXmlLocation" value="classpath:jpa/persistence.xml" />
		<property name="dataSource" ref="dataSource" />
	</bean>


	<tx:annotation-driven transaction-manager="transactionManager" />
	<context:annotation-config />
	<context:component-scan base-package="com.questionnaire" />

	<aop:aspectj-autoproxy />

</beans>